1 ***Replace conefor use to find minimum distances between cores, or make sure conefor works on all systems 
2 **Add check to make sure the same core area ID field name is consistently used across steps (use linktable to pass the field name as a string).  This would be bombproof if we can bypass reliance on conefor!
3 *Browse for conefor file in gui, and automatically create datapass dir
4 *Raise error if no lcplines file found from previous step in update_lcp_shapefile
5 *Replace gp functions for creating directories, etc, with os or shutil
6 *add error/warning log- log file of messages written to screen, particularly errors or warnings.
7 *Raise custom exceptions
8 *Read core and raster files from TOC in ArcMap?
11 **dictionaries- use dot notation?  Desirable, but some have cautioned against this.
11 *keepLinkCriteria- convert to a couple of booleans instead of a long string
11 *Line wrapping- limit to 79 characters?
11 *Modify check_projectdir function to give error if project dir has a space in it.  Ideally check for other special characters not allowed by arcgis.
11 *Move directory creation to master script
11 *Write intermediate stick and lcp maps to a gdb in output directory at each step?
11 *step 4- Write clusterID to a copy of core shapefile.  also use fixed core id field name in this?
11 **try in_memory workrspace for vector operations for speed

Questions
if connecting to 2 nearest, and 2nd nearest has intermediate core, then forces connection to another one instead...

Future
Consider re-instating settings history code at some point to track settings at each step in link table header or footer.
Keep ability to mosaic, so that corridors can be dropped and remaining ones re-mosaicked? user can re-do mosaic without re-doing norm (tho requires saving normlccs)....
save/load settings?  Right now we don't write config settings.  Example code to call is here:
        #
        #configSettings = {}
        #configSettings["coreShapefile"] = coreShapefile 
        #configSettings["coreIds"] = coreIds
        #configSettings["resistance_ras"] = resistance_ras   
        #writeConfig(projectDir, configSettings)
        
 